apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-broker
  name: kafka-svc
  namespace: quantal-dev
spec:
  #type: NodePort
  ports:
    - name: kafka-broker
      port: 9092
   #   nodePort: 9092
      targetPort: 9092
  selector:
    app: kafka-broker

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-broker
  name: kafka-broker
  namespace: quantal-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      hostname: kafka-broker
      containers:
      - env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          # value: <ZOOKEEPER-INTERNAL-IP>:2181
          value: zookeeper-svc.quantal-dev:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-svc.quantal-dev:9092
        - name: KAFKA_LOG_DIRS
          value: "/var/lib/kafka/data"
        - name: KAFKA_CREATE_TOPICS
          value: "car-garage-users:2:1,car-garage-vehicles:2:1"
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        name: kafka-broker
        ports:
        - containerPort: 9092
        volumeMounts:
          - name: kafka-logs-volume
            mountPath: "/kafka/kafka-logs"
          - name: kafka-data-volume
            mountPath: "/var/lib/kafka/data"
      volumes:
      - name: kafka-logs-volume
        persistentVolumeClaim:
          claimName: kafka-logs-local-path-pvc
      - name: kafka-data-volume
        persistentVolumeClaim:
          claimName: kafka-data-local-path-pvc
