apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-broker
  name: kafka-svc-internal
  namespace: quantal-dev
spec:
  ports:
    - name: kafka-broker-internal
      port: 9092
  selector:
    app: kafka-broker

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-broker
  name: kafka-svc-external
  namespace: quantal-dev
spec:
  type: NodePort
  ports:
    - name: kafka-broker-external
      port: 9092
      nodePort: 30003
      protocol: TCP
      targetPort: 30003
  selector:
    app: kafka-broker

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-broker
  name: kafka-broker
  namespace: quantal-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      hostname: kafka-broker
      containers:
      - name: kafka-broker

        env:
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            # value: <ZOOKEEPER-INTERNAL-IP>:2181
            value: zookeeper-svc.quantal-dev:2181
  #        - name: KAFKA_ADVERTISED_PORT
  #          value: "30003"
          - name: KAFKA_LISTENERS
            value: EXTERNAL://:30003,INTERNAL://:9092
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "EXTERNAL://ubuntu2204.homelan.com:30003,INTERNAL://kafka-svc-internal.quantal-dev:9092"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: "INTERNAL"
          - name: KAFKA_LOG_DIRS
            value: "/var/lib/kafka/data"
          - name: KAFKA_CREATE_TOPICS
            value: "car-garage-users:2:1,car-garage-vehicles:2:1"
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        command: [ "/bin/sh", "-c" ]
        args:
          - ls -al /kafka &&
            ls -al /opt/kafka_2.13-2.8.1 &&
            ls -al /kafka/kafka-logs &&
            find / -type f -name meta.properties &&
            find / -type f -name server.properties &&
            find / -type f -name start-kafka.sh &&
            if [ -f "/var/lib/kafka/data/meta.properties" ]; then 
                echo "Found /var/lib/kafka/data/meta.properties !!" &&
                cat /var/lib/kafka/data/meta.properties && 
                rm -vf /var/lib/kafka/data/meta.properties ;
            fi && 
            cd /opt/kafka_2.13-2.8.1 && 
            /usr/bin/start-kafka.sh
        ports:
        - containerPort: 9092
        volumeMounts:
          - name: kafka-logs-volume
            mountPath: "/kafka/kafka-logs"
          - name: kafka-data-volume
            mountPath: "/var/lib/kafka/data"
      volumes:
        - name: kafka-logs-volume
          persistentVolumeClaim:
            claimName: kafka-logs-local-path-pvc
        - name: kafka-data-volume
          persistentVolumeClaim:
            claimName: kafka-data-local-path-pvc
